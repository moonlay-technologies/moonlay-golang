// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "order-service/app/models"

	mock "github.com/stretchr/testify/mock"

	sql "database/sql"
)

// CartRepositoryInterface is an autogenerated mock type for the CartRepositoryInterface type
type CartRepositoryInterface struct {
	mock.Mock
}

// GetByUserID provides a mock function with given fields: userID, cartStatusID, countOnly, ctx, result
func (_m *CartRepositoryInterface) GetByUserID(userID int, cartStatusID int, countOnly bool, ctx context.Context, result chan *models.CartChan) {
	_m.Called(userID, cartStatusID, countOnly, ctx, result)
}

// Insert provides a mock function with given fields: request, sqlTransaction, ctx, result
func (_m *CartRepositoryInterface) Insert(request *models.Cart, sqlTransaction *sql.Tx, ctx context.Context, result chan *models.CartChan) {
	_m.Called(request, sqlTransaction, ctx, result)
}

type mockConstructorTestingTNewCartRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCartRepositoryInterface creates a new instance of CartRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCartRepositoryInterface(t mockConstructorTestingTNewCartRepositoryInterface) *CartRepositoryInterface {
	mock := &CartRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
