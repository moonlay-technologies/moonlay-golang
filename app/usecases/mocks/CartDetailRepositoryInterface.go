// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "poc-order-service/app/models"

	mock "github.com/stretchr/testify/mock"

	sql "database/sql"
)

// CartDetailRepositoryInterface is an autogenerated mock type for the CartDetailRepositoryInterface type
type CartDetailRepositoryInterface struct {
	mock.Mock
}

// GetByCartID provides a mock function with given fields: cartID, countOnly, ctx, result
func (_m *CartDetailRepositoryInterface) GetByCartID(cartID bool, countOnly bool, ctx context.Context, result chan *models.CartDetailsChan) {
	_m.Called(cartID, countOnly, ctx, result)
}

// Insert provides a mock function with given fields: request, sqlTransaction, ctx, result
func (_m *CartDetailRepositoryInterface) Insert(request *models.CartDetail, sqlTransaction *sql.Tx, ctx context.Context, result chan *models.CartDetailChan) {
	_m.Called(request, sqlTransaction, ctx, result)
}

type mockConstructorTestingTNewCartDetailRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCartDetailRepositoryInterface creates a new instance of CartDetailRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCartDetailRepositoryInterface(t mockConstructorTestingTNewCartDetailRepositoryInterface) *CartDetailRepositoryInterface {
	mock := &CartDetailRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
