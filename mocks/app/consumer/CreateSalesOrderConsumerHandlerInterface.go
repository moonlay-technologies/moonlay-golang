// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "order-service/app/models"

	mock "github.com/stretchr/testify/mock"
)

// CreateSalesOrderConsumerHandlerInterface is an autogenerated mock type for the CreateSalesOrderConsumerHandlerInterface type
type CreateSalesOrderConsumerHandlerInterface struct {
	mock.Mock
}

// CreateSoConsumer provides a mock function with given fields: salesOrder, kafkaValue, kafkaTopic, kafkaPartition, kafkaOffset, kafkaKey, err
func (_m *CreateSalesOrderConsumerHandlerInterface) CreateSoConsumer(salesOrder *models.SalesOrder, kafkaValue interface{}, kafkaTopic string, kafkaPartition int, kafkaOffset int64, kafkaKey string, err error) error {
	ret := _m.Called(salesOrder, kafkaValue, kafkaTopic, kafkaPartition, kafkaOffset, kafkaKey, err)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.SalesOrder, interface{}, string, int, int64, string, error) error); ok {
		r0 = rf(salesOrder, kafkaValue, kafkaTopic, kafkaPartition, kafkaOffset, kafkaKey, err)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProcessMessage provides a mock function with given fields:
func (_m *CreateSalesOrderConsumerHandlerInterface) ProcessMessage() {
	_m.Called()
}

type mockConstructorTestingTNewCreateSalesOrderConsumerHandlerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateSalesOrderConsumerHandlerInterface creates a new instance of CreateSalesOrderConsumerHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateSalesOrderConsumerHandlerInterface(t mockConstructorTestingTNewCreateSalesOrderConsumerHandlerInterface) *CreateSalesOrderConsumerHandlerInterface {
	mock := &CreateSalesOrderConsumerHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
