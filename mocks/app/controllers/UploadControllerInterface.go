// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// UploadControllerInterface is an autogenerated mock type for the UploadControllerInterface type
type UploadControllerInterface struct {
	mock.Mock
}

// GetSoUploadErrorLogsByReqId provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) GetSoUploadErrorLogsByReqId(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSosjUploadErrorLogsBySosjUploadHistoryId provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) GetSosjUploadErrorLogsBySosjUploadHistoryId(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSosjUploadHistories provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) GetSosjUploadHistories(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSosjUploadHistoryById provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) GetSosjUploadHistoryById(ctx *gin.Context) {
	_m.Called(ctx)
}

// RetryUploadDO provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) RetryUploadDO(ctx *gin.Context) {
	_m.Called(ctx)
}

// RetryUploadSO provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) RetryUploadSO(ctx *gin.Context) {
	_m.Called(ctx)
}

// RetryUploadSOSJ provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) RetryUploadSOSJ(ctx *gin.Context) {
	_m.Called(ctx)
}

// UploadDO provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) UploadDO(ctx *gin.Context) {
	_m.Called(ctx)
}

// UploadSO provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) UploadSO(ctx *gin.Context) {
	_m.Called(ctx)
}

// UploadSOSJ provides a mock function with given fields: ctx
func (_m *UploadControllerInterface) UploadSOSJ(ctx *gin.Context) {
	_m.Called(ctx)
}

type mockConstructorTestingTNewUploadControllerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewUploadControllerInterface creates a new instance of UploadControllerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUploadControllerInterface(t mockConstructorTestingTNewUploadControllerInterface) *UploadControllerInterface {
	mock := &UploadControllerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
