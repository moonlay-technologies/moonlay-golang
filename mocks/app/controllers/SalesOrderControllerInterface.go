// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// SalesOrderControllerInterface is an autogenerated mock type for the SalesOrderControllerInterface type
type SalesOrderControllerInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) Create(ctx *gin.Context) {
	_m.Called(ctx)
}

// DeleteByID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) DeleteByID(ctx *gin.Context) {
	_m.Called(ctx)
}

// DeleteDetailByID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) DeleteDetailByID(ctx *gin.Context) {
	_m.Called(ctx)
}

// DeleteDetailBySOID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) DeleteDetailBySOID(ctx *gin.Context) {
	_m.Called(ctx)
}

// Export provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) Export(ctx *gin.Context) {
	_m.Called(ctx)
}

// ExportDetail provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) ExportDetail(ctx *gin.Context) {
	_m.Called(ctx)
}

// Get provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) Get(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetByID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetByID(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetDetails provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetDetails(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetDetailsById provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetDetailsById(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetDetailsBySoId provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetDetailsBySoId(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSOJourneyBySoId provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSOJourneyBySoId(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSOJourneys provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSOJourneys(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSOUploadHistories provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSOUploadHistories(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSoUploadErrorLogByReqId provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSoUploadErrorLogByReqId(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSoUploadErrorLogBySoUploadHistoryId provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSoUploadErrorLogBySoUploadHistoryId(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSoUploadHistoriesById provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSoUploadHistoriesById(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetSyncToKafkaHistories provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) GetSyncToKafkaHistories(ctx *gin.Context) {
	_m.Called(ctx)
}

// RetrySyncToKafka provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) RetrySyncToKafka(ctx *gin.Context) {
	_m.Called(ctx)
}

// UpdateByID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) UpdateByID(ctx *gin.Context) {
	_m.Called(ctx)
}

// UpdateSODetailByID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) UpdateSODetailByID(ctx *gin.Context) {
	_m.Called(ctx)
}

// UpdateSODetailBySOID provides a mock function with given fields: ctx
func (_m *SalesOrderControllerInterface) UpdateSODetailBySOID(ctx *gin.Context) {
	_m.Called(ctx)
}

type mockConstructorTestingTNewSalesOrderControllerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewSalesOrderControllerInterface creates a new instance of SalesOrderControllerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSalesOrderControllerInterface(t mockConstructorTestingTNewSalesOrderControllerInterface) *SalesOrderControllerInterface {
	mock := &SalesOrderControllerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
