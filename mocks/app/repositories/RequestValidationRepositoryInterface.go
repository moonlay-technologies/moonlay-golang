// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "order-service/app/models"

	mock "github.com/stretchr/testify/mock"
)

// RequestValidationRepositoryInterface is an autogenerated mock type for the RequestValidationRepositoryInterface type
type RequestValidationRepositoryInterface struct {
	mock.Mock
}

// AgentIdValidation provides a mock function with given fields: agentId, userId, resultChan
func (_m *RequestValidationRepositoryInterface) AgentIdValidation(agentId int, userId int, resultChan chan *models.RequestIdValidationChan) {
	_m.Called(agentId, userId, resultChan)
}

// BrandIdValidation provides a mock function with given fields: brandId, agentId, resultChan
func (_m *RequestValidationRepositoryInterface) BrandIdValidation(brandId int, agentId int, resultChan chan *models.RequestIdValidationChan) {
	_m.Called(brandId, agentId, resultChan)
}

// BrandSalesmanValidation provides a mock function with given fields: brandId, salesmanId, agentId, resultChan
func (_m *RequestValidationRepositoryInterface) BrandSalesmanValidation(brandId int, salesmanId int, agentId int, resultChan chan *models.RequestIdValidationChan) {
	_m.Called(brandId, salesmanId, agentId, resultChan)
}

// MustActiveValidation provides a mock function with given fields: value, resultChan
func (_m *RequestValidationRepositoryInterface) MustActiveValidation(value []*models.MustActiveRequest, resultChan chan *models.MustActiveRequestChan) {
	_m.Called(value, resultChan)
}

// MustEmptyValidation provides a mock function with given fields: value, resultChan
func (_m *RequestValidationRepositoryInterface) MustEmptyValidation(value *models.MustEmptyValidationRequest, resultChan chan *models.MustEmptyValidationRequestChan) {
	_m.Called(value, resultChan)
}

// SalesmanIdValidation provides a mock function with given fields: salesmanId, agentId, resultChan
func (_m *RequestValidationRepositoryInterface) SalesmanIdValidation(salesmanId int, agentId int, resultChan chan *models.RequestIdValidationChan) {
	_m.Called(salesmanId, agentId, resultChan)
}

// StoreAddressesValidation provides a mock function with given fields: storeCode, resultChan
func (_m *RequestValidationRepositoryInterface) StoreAddressesValidation(storeCode string, resultChan chan *models.RequestIdValidationChan) {
	_m.Called(storeCode, resultChan)
}

// StoreIdValidation provides a mock function with given fields: storeId, agentId, resultChan
func (_m *RequestValidationRepositoryInterface) StoreIdValidation(storeId int, agentId int, resultChan chan *models.RequestIdValidationChan) {
	_m.Called(storeId, agentId, resultChan)
}

// UniqueValidation provides a mock function with given fields: value, resultChan
func (_m *RequestValidationRepositoryInterface) UniqueValidation(value *models.UniqueRequest, resultChan chan *models.UniqueRequestChan) {
	_m.Called(value, resultChan)
}

type mockConstructorTestingTNewRequestValidationRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequestValidationRepositoryInterface creates a new instance of RequestValidationRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestValidationRepositoryInterface(t mockConstructorTestingTNewRequestValidationRepositoryInterface) *RequestValidationRepositoryInterface {
	mock := &RequestValidationRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
