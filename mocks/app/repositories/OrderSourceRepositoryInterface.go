// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "order-service/app/models"

	mock "github.com/stretchr/testify/mock"
)

// OrderSourceRepositoryInterface is an autogenerated mock type for the OrderSourceRepositoryInterface type
type OrderSourceRepositoryInterface struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: ID, countOnly, ctx, result
func (_m *OrderSourceRepositoryInterface) GetByID(ID int, countOnly bool, ctx context.Context, result chan *models.OrderSourceChan) {
	_m.Called(ID, countOnly, ctx, result)
}

// GetBySourceName provides a mock function with given fields: sourceName, countOnly, ctx, result
func (_m *OrderSourceRepositoryInterface) GetBySourceName(sourceName string, countOnly bool, ctx context.Context, result chan *models.OrderSourceChan) {
	_m.Called(sourceName, countOnly, ctx, result)
}

type mockConstructorTestingTNewOrderSourceRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrderSourceRepositoryInterface creates a new instance of OrderSourceRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrderSourceRepositoryInterface(t mockConstructorTestingTNewOrderSourceRepositoryInterface) *OrderSourceRepositoryInterface {
	mock := &OrderSourceRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
