// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "order-service/app/models"

	mock "github.com/stretchr/testify/mock"
)

// SosjUploadErrorLogsRepositoryInterface is an autogenerated mock type for the SosjUploadErrorLogsRepositoryInterface type
type SosjUploadErrorLogsRepositoryInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: request, countOnly, ctx, resultChan
func (_m *SosjUploadErrorLogsRepositoryInterface) Get(request *models.GetSosjUploadErrorLogsRequest, countOnly bool, ctx context.Context, resultChan chan *models.SosjUploadErrorLogsChan) {
	_m.Called(request, countOnly, ctx, resultChan)
}

// Insert provides a mock function with given fields: request, ctx, resultChan
func (_m *SosjUploadErrorLogsRepositoryInterface) Insert(request *models.SosjUploadErrorLog, ctx context.Context, resultChan chan *models.SosjUploadErrorLogChan) {
	_m.Called(request, ctx, resultChan)
}

type mockConstructorTestingTNewSosjUploadErrorLogsRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewSosjUploadErrorLogsRepositoryInterface creates a new instance of SosjUploadErrorLogsRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSosjUploadErrorLogsRepositoryInterface(t mockConstructorTestingTNewSosjUploadErrorLogsRepositoryInterface) *SosjUploadErrorLogsRepositoryInterface {
	mock := &SosjUploadErrorLogsRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
