// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"
	model "order-service/global/utils/model"

	mock "github.com/stretchr/testify/mock"

	models "order-service/app/models"

	sql "database/sql"
)

// CartUseCaseInterface is an autogenerated mock type for the CartUseCaseInterface type
type CartUseCaseInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: request, sqlTransaction, ctx
func (_m *CartUseCaseInterface) Create(request *models.SalesOrderStoreRequest, sqlTransaction *sql.Tx, ctx context.Context) (*models.Cart, *model.ErrorLog) {
	ret := _m.Called(request, sqlTransaction, ctx)

	var r0 *models.Cart
	if rf, ok := ret.Get(0).(func(*models.SalesOrderStoreRequest, *sql.Tx, context.Context) *models.Cart); ok {
		r0 = rf(request, sqlTransaction, ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Cart)
		}
	}

	var r1 *model.ErrorLog
	if rf, ok := ret.Get(1).(func(*models.SalesOrderStoreRequest, *sql.Tx, context.Context) *model.ErrorLog); ok {
		r1 = rf(request, sqlTransaction, ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*model.ErrorLog)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewCartUseCaseInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCartUseCaseInterface creates a new instance of CartUseCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCartUseCaseInterface(t mockConstructorTestingTNewCartUseCaseInterface) *CartUseCaseInterface {
	mock := &CartUseCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
