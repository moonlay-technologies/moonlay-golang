// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	models "order-service/app/models"
)

// DeliveryOrderValidatorInterface is an autogenerated mock type for the DeliveryOrderValidatorInterface type
type DeliveryOrderValidatorInterface struct {
	mock.Mock
}

// CreateDeliveryOrderValidator provides a mock function with given fields: _a0, _a1
func (_m *DeliveryOrderValidatorInterface) CreateDeliveryOrderValidator(_a0 *models.DeliveryOrderStoreRequest, _a1 *gin.Context) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.DeliveryOrderStoreRequest, *gin.Context) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteDeliveryOrderByIDValidator provides a mock function with given fields: _a0, _a1
func (_m *DeliveryOrderValidatorInterface) DeleteDeliveryOrderByIDValidator(_a0 string, _a1 *gin.Context) (int, error) {
	ret := _m.Called(_a0, _a1)

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(string, *gin.Context) (int, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(string, *gin.Context) int); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string, *gin.Context) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDeliveryOrderDetailByIDValidator provides a mock function with given fields: _a0, _a1
func (_m *DeliveryOrderValidatorInterface) DeleteDeliveryOrderDetailByIDValidator(_a0 string, _a1 *gin.Context) (int, error) {
	ret := _m.Called(_a0, _a1)

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(string, *gin.Context) (int, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(string, *gin.Context) int); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string, *gin.Context) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExportDeliveryOrderDetailValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) ExportDeliveryOrderDetailValidator(_a0 *gin.Context) (*models.DeliveryOrderDetailExportRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderDetailExportRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderDetailExportRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderDetailExportRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderDetailExportRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExportDeliveryOrderValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) ExportDeliveryOrderValidator(_a0 *gin.Context) (*models.DeliveryOrderExportRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderExportRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderExportRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderExportRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderExportRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDOUploadHistoriesValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDOUploadHistoriesValidator(_a0 *gin.Context) (*models.GetDoUploadHistoriesRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.GetDoUploadHistoriesRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.GetDoUploadHistoriesRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.GetDoUploadHistoriesRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetDoUploadHistoriesRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryOrderBySalesmanIDValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDeliveryOrderBySalesmanIDValidator(_a0 *gin.Context) (*models.DeliveryOrderRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryOrderDetailByDoIDValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDeliveryOrderDetailByDoIDValidator(_a0 *gin.Context) (*models.DeliveryOrderDetailRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderDetailRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderDetailRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderDetailRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderDetailRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryOrderDetailValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDeliveryOrderDetailValidator(_a0 *gin.Context) (*models.DeliveryOrderDetailOpenSearchRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderDetailOpenSearchRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderDetailOpenSearchRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderDetailOpenSearchRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderDetailOpenSearchRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryOrderJourneysValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDeliveryOrderJourneysValidator(_a0 *gin.Context) (*models.DeliveryOrderJourneysRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderJourneysRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderJourneysRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderJourneysRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderJourneysRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryOrderSyncToKafkaHistoriesValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDeliveryOrderSyncToKafkaHistoriesValidator(_a0 *gin.Context) (*models.DeliveryOrderEventLogRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderEventLogRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderEventLogRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderEventLogRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderEventLogRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeliveryOrderValidator provides a mock function with given fields: _a0
func (_m *DeliveryOrderValidatorInterface) GetDeliveryOrderValidator(_a0 *gin.Context) (*models.DeliveryOrderRequest, error) {
	ret := _m.Called(_a0)

	var r0 *models.DeliveryOrderRequest
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (*models.DeliveryOrderRequest, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) *models.DeliveryOrderRequest); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.DeliveryOrderRequest)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateDeliveryOrderByIDValidator provides a mock function with given fields: _a0, _a1, _a2
func (_m *DeliveryOrderValidatorInterface) UpdateDeliveryOrderByIDValidator(_a0 int, _a1 *models.DeliveryOrderUpdateByIDRequest, _a2 *gin.Context) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, *models.DeliveryOrderUpdateByIDRequest, *gin.Context) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateDeliveryOrderDetailByDoIDValidator provides a mock function with given fields: _a0, _a1, _a2
func (_m *DeliveryOrderValidatorInterface) UpdateDeliveryOrderDetailByDoIDValidator(_a0 int, _a1 []*models.DeliveryOrderDetailUpdateByDeliveryOrderIDRequest, _a2 *gin.Context) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []*models.DeliveryOrderDetailUpdateByDeliveryOrderIDRequest, *gin.Context) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateDeliveryOrderDetailByIDValidator provides a mock function with given fields: _a0, _a1, _a2
func (_m *DeliveryOrderValidatorInterface) UpdateDeliveryOrderDetailByIDValidator(_a0 int, _a1 *models.DeliveryOrderDetailUpdateByIDRequest, _a2 *gin.Context) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, *models.DeliveryOrderDetailUpdateByIDRequest, *gin.Context) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDeliveryOrderValidatorInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeliveryOrderValidatorInterface creates a new instance of DeliveryOrderValidatorInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeliveryOrderValidatorInterface(t mockConstructorTestingTNewDeliveryOrderValidatorInterface) *DeliveryOrderValidatorInterface {
	mock := &DeliveryOrderValidatorInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
