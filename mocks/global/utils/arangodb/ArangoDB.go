// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	driver "github.com/arangodb/go-driver"
	mock "github.com/stretchr/testify/mock"
)

// ArangoDB is an autogenerated mock type for the ArangoDB type
type ArangoDB struct {
	mock.Mock
}

// Client provides a mock function with given fields:
func (_m *ArangoDB) Client() driver.Client {
	ret := _m.Called()

	var r0 driver.Client
	if rf, ok := ret.Get(0).(func() driver.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Client)
		}
	}

	return r0
}

// DB provides a mock function with given fields:
func (_m *ArangoDB) DB() driver.Database {
	ret := _m.Called()

	var r0 driver.Database
	if rf, ok := ret.Get(0).(func() driver.Database); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Database)
		}
	}

	return r0
}

// InitCollections provides a mock function with given fields: cols
func (_m *ArangoDB) InitCollections(cols []string) error {
	ret := _m.Called(cols)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(cols)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewArangoDB interface {
	mock.TestingT
	Cleanup(func())
}

// NewArangoDB creates a new instance of ArangoDB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewArangoDB(t mockConstructorTestingTNewArangoDB) *ArangoDB {
	mock := &ArangoDB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
